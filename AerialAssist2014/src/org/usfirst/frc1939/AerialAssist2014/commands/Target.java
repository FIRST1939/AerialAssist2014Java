// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc1939.AerialAssist2014.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.networktables.NetworkTable;
import edu.wpi.first.wpilibj.networktables2.type.NumberArray;
import edu.wpi.first.wpilibj.tables.TableKeyNotDefinedException;
import org.usfirst.frc1939.AerialAssist2014.Robot;
/**
 *
 */
public class  Target extends Command {
    private double timeout;
    private NetworkTable server;
    private boolean targeted;
    private int count;
    
    public Target(double timeout) {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        targeted = false;
        server = NetworkTable.getTable("Camera");
        this.timeout = timeout;
    }
    // Called just before this Command runs the first time
    protected void initialize() {
        this.setTimeout(timeout);
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        if(target() == 16){
            count++;
        }else{
            count = 0;
        }
        if(count > 10){
            targeted = true;
        }
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return targeted || this.isTimedOut();
    }
    // Called once after isFinished returns true
    protected void end() {
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
    
    private int target(){
        int number = 0;
        try
	{
		final NumberArray targetNum = new NumberArray();
		server.retrieveValue("BFR_COORDINATES", targetNum);
		System.out.println(targetNum.size());
                number = targetNum.size();
	}
	catch (TableKeyNotDefinedException e)
	{
	}
        return number;
    }
}
