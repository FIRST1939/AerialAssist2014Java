// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc1939.AerialAssist2014.commands;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc1939.AerialAssist2014.OI;
import org.usfirst.frc1939.AerialAssist2014.Robot;
import org.usfirst.frc1939.AerialAssist2014.RobotMap;
/**
 *
 */
public class  DriveWithJoyStickCommand extends Command {
    public DriveWithJoyStickCommand() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drivetrain);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time
    protected void initialize() {
        RobotMap.drivetrainRobotDrive.setSafetyEnabled(true);
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        System.out.println("Left Front: " + RobotMap.drivetrainleftFrontEncoder.get());
        System.out.println("Left Rear: " + RobotMap.drivetrainleftRearEncoder.get());
        System.out.println("Right Front: " + RobotMap.drivetrainrightFrontEncoder.get());
        System.out.println("Right Rear: " + RobotMap.drivetrainrightRearEncoder.get());
        System.out.println("X: " + Robot.drivetrain.getXDistance());
        System.out.println("Y: " + Robot.drivetrain.getYDistance());
        System.out.println("Distance: " + Robot.drivetrain.getDistance());
        if(Robot.oi.drivetrainTurbo.get()){
            //Turbo, Full speed
            Robot.drivetrain.mecanumDrive(1);
        }else{
            //Half speed
            Robot.drivetrain.mecanumDrive(0.5);
        }
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }
    // Called once after isFinished returns true
    protected void end() {
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
